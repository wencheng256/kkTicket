<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       ">

       <import resource="config.xml"/>

       <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" >
              <property name="configLocation" value="/WEB-INF/config/hibernate.cfg.xml"/>
              <property name="dataSource" ref="dataSourceLocal"/>
              <property name="annotatedClasses">
                     <list>
                            <value>com.wencheng.domain.KeyStation</value>
                            <value>com.wencheng.domain.Station</value>
                     </list>
              </property>
       </bean>
       <bean name="postProcessor" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="properties" ref="propt"/>
       </bean>
       <util:properties id="propt" location="/WEB-INF/config/datasource.properties"/>

       <bean name="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
              <property name="sessionFactory" ref="sessionFactory"/>
       </bean>

       <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
              <property name="dataSource" ref="dataSourceLocal"/>
              <property name="sessionFactory" ref="sessionFactory"/>
       </bean>

       <bean id="dataSourceLocal" name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
              <!-- 指定连接数据库的驱动-->
              <property name="driverClass" value="${jdbc.driverClassName}"/>
              <!-- 指定连接数据库的URL-->
              <property name="jdbcUrl" value="${jdbc.url}"/>
              <!-- 指定连接数据库的用户名-->
              <property name="user" value="${jdbc.username}"/>
              <!-- 指定连接数据库的密码-->
              <property name="password" value="${jdbc.password}"/>
              <!-- 指定连接池中保留的最大连接数. Default:15-->
              <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
              <!-- 指定连接池中保留的最小连接数-->
              <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
              <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
              <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
              <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
              <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
              <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
              <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
              <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。
              但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
              <property name="maxStatements" value="${jdbc.maxStatements}"/>
              <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
              <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
       </bean>

</beans>